<template>
    <div class="page" data-name="home">
      <!-- Top Navbar -->
      <div class="navbar navbar-large">
        <div class="navbar-bg"></div>
        <div class="navbar-inner">
          <div class="title sliding">iAlbums</div>
          <div class="title-large">
            <div class="title-large-text">iAlbums</div>
          </div>
        </div>
      </div>
  
      <div class="page-content">
        <div class="block">
          <p>La tua lista di Album!</p>
        </div>
        <div class="block-title">Albums</div>
  
        <!-- Show Preloader when loading -->
        <div v-if="loading" class="block">
          <div class="preloader color-blue"></div>
          <p>Sincronizzazione in corso...</p>
        </div>
  
        <!-- No Albums Found -->
        <div v-if="!loading && albums.length === 0" class="block">
          <p>Nessun album trovato. Prova a sincronizzare.</p>
        </div>
  
        <!-- Albums List -->
        <div v-else-if="!loading" class="list list-strong inset list-dividers-ios links-list">
          <ul>
            <li v-for="album in albums" :key="album.id">
              <a href="#">{{ getAlbumDetails(album) }}</a>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </template>
  
  <script>
  export default {
    data() {
      return {
        albums: [],
      };
    },
    computed: {
      loading() {
        return this.$store.getters.isLoading;
      },
    },
    async mounted() {
      // Fetch data and update state
      await this.$store.dispatch('fetchData');
      this.albums = this.$store.getters.albums;
    },
    methods: {
      getAlbumDetails(album) {
        const authors = this.$store.getters.authors;
        const author = authors.find((a) => a.id === album.authors[0]) || {};
        return `${author.name || 'Unknown'} - ${album.rating}`;
      },
    },
  };
  </script>
  